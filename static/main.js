function initApp(){window!=window.top&&$("#back_to_patient").hide(),Patient.findOne({id:"x"}).then(function(t){var n=TrialFinder();n.attr("patient",t),$("#app").html(can.view("app_tmpl",{finder:n})),n.find(t)})}function sortedKeysFromDict(t){var n=[];for(var e in t)n[n.length]=e;return n.sort(),n}function sortChildren(t,n,e){var r=t.children(n).get();r.sort(e),$.each(r,function(n,e){t.append(e)})}function newUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var n=16*Math.random()|0,e="x"==t?n:3&n|8;return e.toString(16)})}Array.prototype.contains=function(t){return this.indexOf(t)>=0},"indexOf"in Array.prototype||(Array.prototype.indexOf=function(t){for(var n=0;n<this.length;n++)if(this[n]==t)return n;return-1}),Array.prototype.uniqueArray=function(){for(var t={},n=[],e=0,r=this.length;r>e;++e)t.hasOwnProperty(this[e])||(n.push(this[e]),t[this[e]]=1);return n},window.console||!function(){var t=["log","debug","info","warn","error","assert","dir","dirxml","group","groupEnd","time","timeEnd","count","trace","profile","profileEnd"],n=t.length;window.console={};for(var e=0;n>e;e++)window.console[t[e]]=function(){}}();var Patient=can.Model.extend({id:"_id",findOne:"GET /patients/{id}",update:"PUT /patients/{_id}"},{init:function(t){this.attr("hasConditions",this.conditions&&this.conditions.length>0)}}),TrialFinder=can.Model.extend({},{status:null,error:null,patient:null,result:null,find:function(t,n,e){var r=this;r.attr("status","Searching..."),r.attr("error",null),r.attr("result",null),$.getJSON("/find",{condition:"Breast Cancer"}).always(function(t,n,e){"success"==n?(r.attr("status","Sorting..."),t&&(r.attr("result",new TrialFinderResult(t)),r.attr("complete",!0))):r.attr("error","Error: "+e.toString()),r.attr("status",null)})}}),_intervention_map={Biological:"Drug/Biological",Drug:"Drug/Biological",Behavioral:"Behavioral/Other",Other:"Behavioral/Other"},TrialFinderResult=can.Model.extend({},{results:null,numShown:0,numShownTitle:null,interventions:null,phases:null,showPhases:!1,init:function(t){return t?(this.attr("results",TrialResult.fromJSON(t.results)),this.collectInterventions(),void this.collectPhases()):null},updateTrialShownState:function(){for(var t=$.map(this.interventions,function(t,n){return t.active?t.name:null}),n=$.map(this.phases,function(t,n){return t.active?t.name:null}),e={},r=0,i=0;i<this.results.length;i++){var s=this.results[i];s.attr("shownForInterventions",!1),s.attr("shownForPhases",!1);var a=s.trial;if(a&&a.interventions)for(var o=0;o<a.interventions.length;o++){var l=a.interventions[o];l=l in _intervention_map?_intervention_map[l]:l,t.indexOf(l)>=0&&s.attr("shownForInterventions",!0)}if(a&&a.phases)for(var o=0;o<a.phases.length;o++){var h=a.phases[o];if(s.attr("shownForPhases",s.shownForPhases||n.indexOf(h)>=0),s.shownForInterventions){var u=e[h]||0;e[h]=u+1}}s.attr("shown")&&r++}this.attr("numShown",r),r>1?this.attr("numShownTitle",r+" Trials"):this.attr("numShownTitle",r>0?"1 Trial":null);for(var i=0;i<this.phases.length;i++){var h=this.phases[i];h.attr("numMatches",e[h.name]||0)}this.attr("showPhases",t.length>0)},collectInterventions:function(){if(!(this.interventions&&this.interventions.length>0)){for(var t=[],n={},e=0;e<this.results.length;e++){var r=this.results[e].trial;if(r&&r.interventions)for(var i=[],s=0;s<r.interventions.length;s++){var a=r.interventions[s];if(a in _intervention_map&&(a=_intervention_map[a]),!i.contains(a)){i.push(a);var o=n[a];o||(o=new TrialIntervention(null,a),o.parent=this,n[a]=o,t.push(o)),o.addMatch()}}}t.length>0&&this.attr("interventions",t.sort(TrialGroupable.sortByName))}},collectPhases:function(){if(!(this.phases&&this.phases.length>0)){for(var t=[],n={},e=0;e<this.results.length;e++){var r=this.results[e].trial;if(r&&r.phases)for(var i=0;i<r.phases.length;i++){var s=r.phases[i],a=n[s];a||(a=new TrialPhase(null,s),a.parent=this,n[s]=a,t.push(a))}}this.attr("phases",t.sort(TrialGroupable.sortByName))}}}),TrialGroupable=can.Model.extend({sortByName:function(t,n){return t.name>n.name?1:t.name<n.name?-1:0}},{parent:null,name:null,huid:null,active:!1,numMatches:0,addMatch:function(){this.attr("numMatches",this.numMatches+1)}}),TrialIntervention=TrialGroupable.extend({},{init:function(t,n){this.attr("name",n),this.attr("huid","intervention_"+this.name.replace(/\W\D/,"_"))}}),TrialPhase=TrialGroupable.extend({},{init:function(t,n){this.attr("name",n),this.attr("huid","phase_"+this.name.replace(/\W\D/,"_")),this.attr("active",!0)}}),TrialResult=can.Model.extend({fromJSON:function(t){if(!t)return null;for(var n=[],e=0;e<t.length;e++){var r=new TrialResult(t[e]);n.push(r)}return n}},{trial:null,tests:null,shown:!1,shownForInterventions:!1,shownForPhases:!1,init:function(t){this.attr("trial",new Trial(t.trial)),this.attr("tests",new TrialResultTest.fromJSON(t.tests)),this.bind("shownForInterventions",function(t,n,e){this.attr("shown",n&&this.shownForPhases)}),this.bind("shownForPhases",function(t,n,e){this.attr("shown",n&&this.shownForInterventions)})}}),TrialResultTest=can.Model.extend({fromJSON:function(t){if(!t)return null;for(var n=[],e=0;e<t.length;e++)n.push(new TrialResultTest(t[e]));return n}},{}),Trial=can.Model.extend({findAll:"GET /trials",geocode:function(t,n){for(var e=0;e<t.length;e++)t[e].geocode(n)},fromJSON:function(t){if(!t)return null;for(var n=[],e=0;e<t.length;e++)n.push(new Trial(t[e]));return n}},{interventions:null,phases:null,init:function(t){if(this.phases&&this.attr("phasesFormatted",$.makeArray(this.phases).sort().join(", ")),this.attr("primary_outcome"))for(var n=0;n<this.attr("primary_outcome").length;n++){var e=this.attr("primary_outcome")[n];"safety_issue"in e&&e.attr("safety_issue","Yes"==e.safety_issue)}if(this.attr("secondary_outcome"))for(var n=0;n<this.attr("secondary_outcome").length;n++){var e=this.attr("secondary_outcome")[n];"safety_issue"in e&&e.attr("safety_issue","Yes"==e.safety_issue)}}});